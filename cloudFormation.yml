AWSTemplateFormatVersion: 2010-09-09
Parameters:
  FrontEndGHRepo:
    Type: String
    Default: "OMGITSPHOTOS"

  FrontEndGHBranch:
    Type: String
    Default: "front-end"

  FrontEndGHToken:
    Type: String
    Default: ""

  FrontEndGHUser:
    Type: String
    Default: "gloriahwoang"

  LambdasGHRepo:
    Type: String
    Default: "OMGITSPHOTOS"

  LambdasGHBranch:
    Type: String
    Default: "main"

  LambdasGHToken:
    Type: String
    Default: ""

  LambdasGHUser:
    Type: String
    Default: "gloriahwoang"

Resources:

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: LF1-Index-Photos.lambda_handler
      Role: arn:aws:iam::653496211370:role/LambdaASM2
      Code:
        S3Bucket: lambdas-cloudformation
        S3Key: LF1-Index-Photos.zip
      Runtime: python3.7
      Timeout: 60
      TracingConfig:
        Mode: Active
  
  NewAPI:
    Type : AWS::ApiGateway::RestApi
    Properties :
            Body :
                swagger : 2.0
                info :
                    version : 0.0.1
                    title : newapi
                basePath: "/test-stage"
                schemes:
                - "https"
                paths:
                  /search:
                    get:
                      operationId: "searchPhotos"
                      produces:
                      - "application/json"
                      parameters:
                      - name: "q"
                        in: "query"
                        required: false
                        type: "string"
                      responses:
                        "200":
                          description: "200 response"
                          schema:
                            $ref: "#/definitions/SearchResponse"
                          headers:
                            Access-Control-Allow-Origin:
                              type: "string"
                        "500":
                          description: "500 response"
                          schema:
                            $ref: "#/definitions/Error"
                        "403":
                          description: "403 response"
                          schema:
                            $ref: "#/definitions/Error"
                    options:
                      consumes:
                      - "application/json"
                      produces:
                      - "application/json"
                      responses:
                        "200":
                          description: "200 response"
                          schema:
                            $ref: "#/definitions/SearchResponse"
                          headers:
                            Access-Control-Allow-Origin:
                              type: "string"
                            Access-Control-Allow-Methods:
                              type: "string"
                            Access-Control-Allow-Headers:
                              type: "string"
                  /upload/{photo}/{item}:
                    put:
                      produces:
                      - "application/json"
                      parameters:
                      - name: "Content-Type"
                        in: "header"
                        required: false
                        type: "string"
                      - name: "item"
                        in: "path"
                        required: true
                        type: "string"
                      - name: "photo"
                        in: "path"
                        required: true
                        type: "string"
                      - name: "x-amz-meta-customLabels"
                        in: "header"
                        required: false
                        type: "string"
                      responses:
                        "200":
                          description: "200 response"
                          schema:
                            $ref: "#/definitions/Photo"
                          headers:
                            Access-Control-Allow-Origin:
                              type: "string"
                    options:
                      consumes:
                      - "application/json"
                      produces:
                      - "application/json"
                      parameters:
                      - name: "photo"
                        in: "path"
                        required: true
                        type: "string"
                      - name: "item"
                        in: "path"
                        required: true
                        type: "string"
                      responses:
                        "200":
                          description: "200 response"
                          schema:
                            $ref: "#/definitions/SearchResponse"
                          headers:
                            Access-Control-Allow-Origin:
                              type: "string"
                            Access-Control-Allow-Methods:
                              type: "string"
                            Access-Control-Allow-Headers:
                              type: "string"
                definitions:
                  Error:
                    type: "object"
                    properties:
                      code:
                        type: "integer"
                        format: "int32"
                      message:
                        type: "string"
                  Photo:
                    type: "object"
                    properties:
                      url:
                        type: "string"
                      labels:
                        type: "array"
                        items:
                          type: "string"
                  SearchResponse:
                    type: "object"
                    properties:
                      results:
                        type: "array"
                        items:
                          $ref: "#/definitions/Photo"
            Parameters:
                endpointConfigurationTypes: REGIONAL
    
  AdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: admin
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  S3ForArtifact:
    Type: "AWS::S3::Bucket"

  S3Frontend:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
  

  LambdasPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      RoleArn: !GetAtt AdminRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3ForArtifact
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              RunOrder: 1
              Configuration:
                Repo: !Ref LambdasGHRepo
                Branch: !Ref LambdasGHBranch
                OAuthToken: !Ref LambdasGHToken
                Owner: !Ref LambdasGHUser
                PollForSourceChanges: "true"
              OutputArtifacts:
                - Name: SourceArtifact
              InputArtifacts: []
              Region: "us-east-1"
              Namespace: SourceVariables
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              RunOrder: 1
              Configuration:
                ProjectName: "lambda-pipeline-build"
              OutputArtifacts:
                - Name: BuildArtifact
              InputArtifacts:
                - Name: SourceArtifact
              Region: "us-east-1"
              Namespace: BuildVariables
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                ChangeSetName: "asm2-changeset"
                RoleArn: !GetAtt AdminRole.Arn
                StackName: "omgitsphotos-stack"
                TemplatePath: BuildArtifact::output-sam.yml
              OutputArtifacts: []
              InputArtifacts:
                - Name: BuildArtifact
              Region: us-east-1
              Namespace: DeployVariables

  PipelineS3:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      RoleArn: !GetAtt AdminRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3ForArtifact
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Repo: !Ref FrontEndGHRepo
                Owner: !Ref FrontEndGHUser
                Branch: !Ref FrontEndGHBranch
                OAuthToken: !Ref FrontEndGHToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Ref S3Frontend
                Extract: true
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

  OpenSearch:
    Type: "AWS::OpenSearchService::Domain"
    Properties:
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions: 
          MasterUserName: admin
          MasterUserPassword: Admin1234!
      NodeToNodeEncryptionOptions: 
        Enabled: true
      EncryptionAtRestOptions:
        Enabled: true
      DomainEndpointOptions: 
        EnforceHTTPS : true
      DomainName: 'photos-asm2-os'
      ClusterConfig:
        InstanceCount: '1'
        InstanceType: 't3.small.search'
      EBSOptions:
        EBSEnabled: true
        Iops: '3000'
        VolumeSize: '10'
        VolumeType: 'gp3'
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: '*'